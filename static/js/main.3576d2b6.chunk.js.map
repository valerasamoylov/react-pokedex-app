{"version":3,"sources":["components/Header.js","config.js","commons/GridCards.js","views/Pokemons.js","commons/PokemonDetails.js","views/About.js","views/Wrapper.js","App.js","index.js"],"names":["Header","className","style","zIndex","href","API_URL","IMAGE_BASE_URL","Title","Typography","typeColors","normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy","GridCards","props","key","image","pokemonName","pokemonUrl","pokemonId","useState","PokemonTypes","setPokemonTypes","LoadingForPokemon","setLoadingForPokemon","useEffect","endpointForPokemonInfo","fetchPokemon","fetch","then","result","json","types","catch","error","console","lg","md","xs","onClick","onClickPoke","display","flexDirection","justifyContent","border","borderRadius","cursor","alt","src","level","textAlign","charAt","toUpperCase","substring","map","id","Fragment","currType","url","color","padding","margin","backgroundColor","type","name","Pokemons","PokemonsList","loadMoreItems","Loading","buttonRef","useRef","gutter","pokemon","index","ref","PokemonDetails","PokemonStats","String","height","width","fontWeight","undefined","length","weight","stats","t","base_stat","moves","About","LoadingForSelectedPokemon","position","top","Wrapper","setPokemonsList","MainPokemonImage","setMainPokemonImage","setLoading","CurrentPage","setCurrentPage","SelectedPokemon","setSelectedPokemon","setLoadingForSelectedPokemon","SelectedPokemonIndex","setSelectedPokemonIndex","setPokemonStats","isAboutShown","setAboutShow","endpoint","fetchPokemons","results","sm","log","fetchPokemonDetails","fetchPokemonStats","App","fallback","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3576d2b6.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nimport \"./Header.css\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <nav className=\"menu\" style={{ zIndex: 1 }}>\r\n      <div className=\"menu__logo\">\r\n        <a href=\"https://valerasamoylov.github.io/react-pokedex-app/\">\r\n          Pokedex\r\n        </a>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","export const API_URL = \"https://pokeapi.co/api/v2/pokemon/\";\r\n\r\nexport const IMAGE_BASE_URL =\r\n  \"https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/\";\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Col, Typography } from \"antd\";\r\nimport \"./GridCards.css\";\r\n\r\nconst { Title } = Typography;\r\nconst typeColors = {\r\n  normal: \"#8A8A80\",\r\n  fire: \"#FE6148\",\r\n  water: \"#4B90D6\",\r\n  electric: \"#FFCC32\",\r\n  grass: \"#77CC55\",\r\n  ice: \"#7ED4FF\",\r\n  fighting: \"#BA5544\",\r\n  poison: \"#AA5599\",\r\n  ground: \"#D8BD6C\",\r\n  flying: \"#9AA9FE\",\r\n  psychic: \"#FF6FA9\",\r\n  bug: \"#AABB22\",\r\n  rock: \"#C5B67E\",\r\n  ghost: \"#7D7EC6\",\r\n  dragon: \"#7766ED\",\r\n  dark: \"#795848\",\r\n  steel: \"#B7B7C5\",\r\n  fairy: \"#F1A9F0\",\r\n};\r\n\r\nfunction GridCards(props) {\r\n  let { key, image, pokemonName, pokemonUrl, pokemonId } = props;\r\n\r\n  const [PokemonTypes, setPokemonTypes] = useState([]);\r\n  const [LoadingForPokemon, setLoadingForPokemon] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const endpointForPokemonInfo = `${pokemonUrl}`;\r\n    fetchPokemon(endpointForPokemonInfo); // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const fetchPokemon = (endpointForPokemonInfo) => {\r\n    fetch(endpointForPokemonInfo)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        setPokemonTypes([...PokemonTypes, result.types]);\r\n      }, setLoadingForPokemon(false))\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  };\r\n\r\n  return (\r\n    <Col\r\n      key={key}\r\n      lg={8}\r\n      md={12}\r\n      xs={24}\r\n      onClick={() => {\r\n        props.onClickPoke(pokemonId);\r\n      }}\r\n    >\r\n      <div\r\n        className=\"poke-card\"\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"column\",\r\n          justifyContent: \"center\",\r\n          border: \"1px solid #333\",\r\n          borderRadius: \".3rem\",\r\n          cursor: \"pointer\",\r\n        }}\r\n      >\r\n        <img alt={pokemonName} src={image} />\r\n\r\n        <Title level={4} style={{ textAlign: \"center\" }}>\r\n          {pokemonName.charAt(0).toUpperCase() + pokemonName.substring(1)}\r\n        </Title>\r\n\r\n        <div>\r\n          {PokemonTypes &&\r\n            PokemonTypes.map((types, id) => (\r\n              <React.Fragment key={id}>\r\n                {types.map((currType, url) => (\r\n                  <div\r\n                    key={url}\r\n                    style={{\r\n                      color: \"#fff\",\r\n                      padding: \".2rem 1rem\",\r\n                      display: \"inline-block\",\r\n                      borderRadius: \".3rem\",\r\n                      margin: \".2rem\",\r\n                      backgroundColor: `${typeColors[currType.type.name]}`,\r\n                    }}\r\n                  >\r\n                    {currType.type.name.charAt(0).toUpperCase() +\r\n                      currType.type.name.substring(1)}\r\n                  </div>\r\n                ))}\r\n              </React.Fragment>\r\n            ))}\r\n        </div>\r\n        {LoadingForPokemon && <div>Loading...</div>}\r\n      </div>\r\n    </Col>\r\n  );\r\n}\r\n\r\nexport default GridCards;\r\n","import React, { useRef } from \"react\";\r\nimport { Row, Button } from \"antd\";\r\nimport { IMAGE_BASE_URL } from \"../config\";\r\nimport GridCard from \"../commons/GridCards\";\r\n\r\nfunction Pokemons(props) {\r\n  let { PokemonsList, loadMoreItems, Loading, onClickPoke } = props;\r\n  const buttonRef = useRef(null);\r\n\r\n  return (\r\n    <div style={{ margin: 0 }}>\r\n      <div style={{ margin: \"1rem auto\" }}>\r\n        <Row gutter={[16, 16]}>\r\n          {PokemonsList &&\r\n            PokemonsList.map((pokemon, index) => (\r\n              <React.Fragment key={index}>\r\n                <GridCard\r\n                  image={`${IMAGE_BASE_URL}${++index}.png`}\r\n                  pokemonId={index}\r\n                  pokemonName={pokemon.name}\r\n                  pokemonUrl={pokemon.url}\r\n                  onClickPoke={onClickPoke}\r\n                />\r\n              </React.Fragment>\r\n            ))}\r\n        </Row>\r\n        {Loading && <div>Loading...</div>}\r\n        <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n          <Button ref={buttonRef} className=\"loadMore\" onClick={loadMoreItems}>\r\n            Load More\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Pokemons;\r\n","import React from \"react\";\r\nimport { Typography } from \"antd\";\r\nconst { Title } = Typography;\r\n\r\nconst typeColors = {\r\n  normal: \"#8A8A80\",\r\n  fire: \"#FE6148\",\r\n  water: \"#4B90D6\",\r\n  electric: \"#FFCC32\",\r\n  grass: \"#77CC55\",\r\n  ice: \"#7ED4FF\",\r\n  fighting: \"#BA5544\",\r\n  poison: \"#AA5599\",\r\n  ground: \"#D8BD6C\",\r\n  flying: \"#9AA9FE\",\r\n  psychic: \"#FF6FA9\",\r\n  bug: \"#AABB22\",\r\n  rock: \"#C5B67E\",\r\n  ghost: \"#7D7EC6\",\r\n  dragon: \"#7766ED\",\r\n  dark: \"#795848\",\r\n  steel: \"#B7B7C5\",\r\n  fairy: \"#F1A9F0\",\r\n};\r\n\r\nfunction PokemonDetails(props) {\r\n  let {\r\n    pokemon,\r\n    Loading,\r\n    image,\r\n    PokemonTypes,\r\n    pokemonName,\r\n    pokemonId,\r\n    PokemonStats,\r\n  } = props;\r\n\r\n  pokemonId = String(pokemonId);\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        border: \"1px solid #333\",\r\n        height: \"300px\",\r\n        width: \"67%\",\r\n        backgroundColor: \"lightblue\",\r\n      }}\r\n    >\r\n      <img alt={pokemon.id} src={image} />\r\n      <Title\r\n        level={2}\r\n        style={{ textAlign: \"center\", fontWeight: 800 }}\r\n        key={pokemon.id}\r\n      >\r\n        {pokemonName !== undefined ? (\r\n          <span>\r\n            {pokemonName.charAt(0).toUpperCase() + pokemonName.substring(1)}{\" \"}\r\n          </span>\r\n        ) : null}\r\n        {pokemonId !== undefined\r\n          ? (pokemonId.length === 1 && <span>#00{pokemonId}</span>) ||\r\n            (pokemonId.length === 2 && <span>#0{pokemonId}</span>) ||\r\n            (pokemonId.length === 3 && <span>#{pokemonId}</span>)\r\n          : null}\r\n      </Title>\r\n\r\n      {Loading && <div>Loading...</div>}\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <span>Type</span>\r\n        <span>\r\n          {PokemonTypes &&\r\n            PokemonTypes.map((types, id) => (\r\n              <React.Fragment key={id}>\r\n                {types.map((currType, url) => (\r\n                  <span\r\n                    key={url}\r\n                    style={{\r\n                      margin: \"0 .2rem\",\r\n                      color: \"#fff\",\r\n                      padding: \"0 1rem\",\r\n                      backgroundColor: `${typeColors[currType.type.name]}`,\r\n                      borderRadius: \".3rem\",\r\n                    }}\r\n                  >\r\n                    {currType.type.name.charAt(0).toUpperCase() +\r\n                      currType.type.name.substring(1)}\r\n                  </span>\r\n                ))}\r\n              </React.Fragment>\r\n            ))}\r\n        </span>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <span>Weight</span>\r\n        <span>{pokemon.weight * 0.1} kg</span>\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          flexDirection: \"row\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <div>\r\n          <p style={{ padding: \"0\", margin: \"0\" }}>Speed</p>\r\n          <p style={{ padding: \"0\", margin: \"0\" }}>SP Defense</p>\r\n          <p style={{ padding: \"0\", margin: \"0\" }}>SP Attack</p>\r\n          <p style={{ padding: \"0\", margin: \"0\" }}>Defense</p>\r\n          <p style={{ padding: \"0\", margin: \"0\" }}>Attack</p>\r\n          <p style={{ padding: \"0\", margin: \"0\" }}>HP</p>\r\n        </div>\r\n        {PokemonStats &&\r\n          PokemonStats.map((pokemon, id) => (\r\n            <React.Fragment key={id}>\r\n              <div>\r\n                {pokemon.stats\r\n                  ? pokemon.stats.map((t) => (\r\n                      <p\r\n                        style={{\r\n                          padding: \"0\",\r\n                          margin: \"0\",\r\n                          textAlign: \"right\",\r\n                        }}\r\n                      >\r\n                        {t.base_stat}\r\n                      </p>\r\n                    ))\r\n                  : \"\"}\r\n              </div>\r\n            </React.Fragment>\r\n          ))}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          justifyContent: \"space-between\",\r\n        }}\r\n      >\r\n        <div>Total moves</div>\r\n        {pokemon.moves !== undefined ? (\r\n          <span>{pokemon.moves.length} </span>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PokemonDetails;\r\n","import React from \"react\";\r\nimport PokemonDetails from \"../commons/PokemonDetails\";\r\nimport { IMAGE_BASE_URL } from \"../config\";\r\n\r\nfunction About(props) {\r\n  let {\r\n    pokemon,\r\n    LoadingForSelectedPokemon,\r\n    index,\r\n    PokemonTypes,\r\n    PokemonStats,\r\n  } = props;\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        position: \"sticky\",\r\n        top: 0,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n      }}\r\n    >\r\n      <PokemonDetails\r\n        pokemonName={pokemon.name}\r\n        pokemonId={pokemon.id}\r\n        pokemon={pokemon}\r\n        LoadingForSelectedPokemon={LoadingForSelectedPokemon}\r\n        image={`${IMAGE_BASE_URL}${index}.png`}\r\n        PokemonTypes={PokemonTypes}\r\n        PokemonStats={PokemonStats}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport Pokemons from \"./Pokemons\";\r\nimport About from \"./About\";\r\nimport { API_URL } from \"../config\";\r\n\r\nfunction Wrapper() {\r\n  const [PokemonsList, setPokemonsList] = useState([]);\r\n  const [MainPokemonImage, setMainPokemonImage] = useState(null);\r\n  const [Loading, setLoading] = useState(true);\r\n  const [CurrentPage, setCurrentPage] = useState(0);\r\n  const [SelectedPokemon, setSelectedPokemon] = useState([]);\r\n  const [LoadingForSelectedPokemon, setLoadingForSelectedPokemon] = useState(\r\n    true\r\n  );\r\n  const [SelectedPokemonIndex, setSelectedPokemonIndex] = useState();\r\n  const [PokemonTypes, setPokemonTypes] = useState([]);\r\n  const [PokemonStats, setPokemonStats] = useState([]);\r\n  const [isAboutShown, setAboutShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const endpoint = `${API_URL}?offset=${CurrentPage}&limit=12`;\r\n    fetchPokemons(endpoint); // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const fetchPokemons = (endpoint) => {\r\n    fetch(endpoint)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        setPokemonsList([...PokemonsList, ...result.results]);\r\n        setMainPokemonImage(MainPokemonImage || result.results[0]);\r\n        setCurrentPage(CurrentPage + 12);\r\n      }, setLoading(false))\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  };\r\n\r\n  const loadMoreItems = () => {\r\n    let endpoint = \"\";\r\n    endpoint = `${API_URL}?offset=${CurrentPage}&limit=12`;\r\n    fetchPokemons(endpoint);\r\n  };\r\n\r\n  const fetchPokemonDetails = (pokemonId) => {\r\n    fetch(`${API_URL}${pokemonId}`)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        setSelectedPokemon(result);\r\n      }, setLoadingForSelectedPokemon(false))\r\n      .catch((error) => console.log(\"Error:\", error));\r\n  };\r\n\r\n  const fetchPokemon = (pokemonId) => {\r\n    fetch(`${API_URL}${pokemonId}`)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        setPokemonTypes([result.types]);\r\n      }, setLoadingForSelectedPokemon(false))\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  };\r\n\r\n  const fetchPokemonStats = (pokemonId) => {\r\n    fetch(`${API_URL}${pokemonId}`)\r\n      .then((result) => result.json())\r\n      .then((result) => {\r\n        setPokemonStats([result]);\r\n      })\r\n      .catch((error) => console.error(\"Error:\", error));\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col xs={24} sm={14} lg={16}>\r\n        <Pokemons\r\n          PokemonsList={PokemonsList}\r\n          loadMoreItems={loadMoreItems}\r\n          Loading={Loading}\r\n          onClickPoke={(pokemonId) => {\r\n            fetchPokemonDetails(pokemonId);\r\n            fetchPokemon(pokemonId);\r\n            fetchPokemonStats(pokemonId);\r\n            setSelectedPokemonIndex(pokemonId);\r\n            setAboutShow(true);\r\n          }}\r\n        />\r\n      </Col>\r\n      <Col xs={24} sm={10} lg={8}>\r\n        {isAboutShown && (\r\n          <About\r\n            pokemon={SelectedPokemon}\r\n            PokemonTypes={PokemonTypes}\r\n            PokemonStats={PokemonStats}\r\n            index={SelectedPokemonIndex}\r\n            LoadingForSelectedPokemon={LoadingForSelectedPokemon}\r\n          />\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n}\r\n\r\nexport default Wrapper;\r\n","import React, { Suspense } from \"react\";\nimport Header from \"./components/Header\";\n\nimport Wrapper from \"./views/Wrapper\";\nfunction App() {\n  return (\n    <Suspense fallback={<div>loading...</div>}>\n      <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n        <Header />\n        <Wrapper />\n      </div>\n    </Suspense>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}